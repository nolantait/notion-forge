import { Props as AliasProps } from "@components/alias";
import { Props as AssetWrapperProps } from "@components/asset-wrapper";
import { Props as AssetProps } from "@components/asset";
import { Props as AudioProps } from "@components/audio";
import { Props as BookmarkProps } from "@components/bookmark";
import { Props as BulletedListProps } from "@components/bulleted-list";
import { Props as CalloutProps } from "@components/callout";
import { Props as CheckboxProps } from "@components/checkbox";
import { Props as CodeProps } from "@components/code";
import { Props as CollectionCardProps } from "@components/collections/card";
import { Props as CollectionRowProps } from "@components/collection-row";
import { Props as CollectionViewPageProps } from "@components/page";
import { Props as CollectionViewBoardProps } from "@components/collections/board/view";
import { Props as CollectionViewGalleryProps } from "@components/collections/gallery/view";
import { Props as CollectionViewListProps } from "@components/collections/list/view";
import { Props as CollectionViewTableProps } from "@components/collections/table/view";
import { Props as CollectionViewProps } from "@components/collection-view";
import { Props as DividerProps } from "@components/divider";
import { Props as EquationProps } from "@components/equation";
import { Props as FileProps } from "@components/file";
import { Props as GoogleDriveProps } from "@components/google-drive";
import { Props as HeaderProps } from "@components/header";
import { Props as LazyImageProps } from "@components/lazy-image";
import { Props as ImageProps } from "@components/graceful-image";
import { Props as LinkProps } from "@components/link";
import { Props as NumberedListProps } from "@components/numbered-list";
import { Props as PageProps } from "@components/page";
import { Props as PageIconProps } from "@components/page-icon";
import { Props as PageLinkProps } from "@components/page-link";
import { Props as PageTitleProps } from "@components/page-title";
import { Props as PropertyProps } from "@components/property";
import { Props as QuoteProps } from "@components/quote";
import { Props as SyncContainerProps } from "@components/sync-container";
import { Props as SyncPointerProps } from "@components/sync-pointer-block";
import { Props as TableOfContentsProps } from "@components/table-of-contents";
import { Props as TextProps } from "@components/text";
import { Props as TitleProps } from "@components/title";
import { Props as TodoProps } from "@components/to-do";
import { Props as ToggleProps } from "@components/toggle";

export type Presenter<T> = (props: T) => React.ReactElement;

export interface Any {
  alias: Presenter<AliasProps>;
  assetWrapper: Presenter<AssetWrapperProps>;
  asset: Presenter<AssetProps>;
  audio: Presenter<AudioProps>;
  bookmark: Presenter<BookmarkProps>;
  bulletedList: Presenter<BulletedListProps>;
  callout: Presenter<CalloutProps>;
  checkbox: Presenter<CheckboxProps>;
  code: Presenter<CodeProps>;
  collectionCard: Presenter<CollectionCardProps>;
  collectionRow: Presenter<CollectionRowProps>;
  collectionViewPage: Presenter<CollectionViewPageProps>;
  collectionViewBoard: Presenter<CollectionViewBoardProps>;
  collectionViewGallery: Presenter<CollectionViewGalleryProps>;
  collectionViewList: Presenter<CollectionViewListProps>;
  collectionViewTable: Presenter<CollectionViewTableProps>;
  collectionView: Presenter<CollectionViewProps>;
  divider: Presenter<DividerProps>;
  equation: Presenter<EquationProps>;
  file: Presenter<FileProps>;
  googleDrive: Presenter<GoogleDriveProps>;
  header: Presenter<HeaderProps>;
  lazyImage: Presenter<LazyImageProps>;
  image: Presenter<ImageProps>;
  link: Presenter<LinkProps>;
  numberedList: Presenter<NumberedListProps>;
  page: Presenter<PageProps>;
  pageHeader: Presenter<never>;
  pageIcon: Presenter<PageIconProps>;
  pageLink: Presenter<PageLinkProps>;
  pageTitle: Presenter<PageTitleProps>;
  property: Presenter<PropertyProps>;
  quote: Presenter<QuoteProps>;
  syncContainer: Presenter<SyncContainerProps>;
  syncPointer: Presenter<SyncPointerProps>;
  tableOfContents: Presenter<TableOfContentsProps>;
  text: Presenter<TextProps>;
  title: Presenter<TitleProps>;
  todo: Presenter<TodoProps>;
  toggle: Presenter<ToggleProps>;
}
